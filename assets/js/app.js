class DatingApp {
    constructor() {
        this.config = {
            colors: ['#FF6B6B', '#4ECDC4', '#4A64BF', '#FDCB6E', '#A05195', '#2ECC71', '#E74C3C', '#3498DB', '#9B59B6', '#1ABC9C', '#F1C40F', '#E67E22'], // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞
            maxInterests: 5,
            minAge: 18,
            maxAge: 100,
            maxPhotos: 6,
            interests: [
                { id: 'music', name: '–ú—É–∑—ã–∫–∞', emoji: 'üéµ' },
                { id: 'sports', name: '–°–ø–æ—Ä—Ç', emoji: '‚öΩ' },
                { id: 'books', name: '–ö–Ω–∏–≥–∏', emoji: 'üìö' },
                { id: 'travel', name: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', emoji: '‚úàÔ∏è' },
                { id: 'art', name: '–ò—Å–∫—É—Å—Å—Ç–≤–æ', emoji: 'üé®' },
                { id: 'games', name: '–ò–≥—Ä—ã', emoji: 'üéÆ' },
                { id: 'cooking', name: '–ö—É–ª–∏–Ω–∞—Ä–∏—è', emoji: 'üç≥' },
                { id: 'photography', name: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', emoji: 'üì∑' },
                { id: 'movies', name: '–ö–∏–Ω–æ', emoji: 'üé¨' },
                { id: 'nature', name: '–ü—Ä–∏—Ä–æ–¥–∞', emoji: 'üå≥' },
                { id: 'technology', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', emoji: 'üíª' },
                { id: 'fashion', name: '–ú–æ–¥–∞', emoji: 'üëó' }
            ],
            zodiacSigns: [
                { id: 'aries', name: '–û–≤–µ–Ω ‚ôà', dates: '21.03 - 19.04' },
                { id: 'taurus', name: '–¢–µ–ª–µ—Ü ‚ôâ', dates: '20.04 - 20.05' },
                { id: 'gemini', name: '–ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôä', dates: '21.05 - 20.06' },
                { id: 'cancer', name: '–†–∞–∫ ‚ôã', dates: '21.06 - 22.07' },
                { id: 'leo', name: '–õ–µ–≤ ‚ôå', dates: '23.07 - 22.08' },
                { id: 'virgo', name: '–î–µ–≤–∞ ‚ôç', dates: '23.08 - 22.09' },
                { id: 'libra', name: '–í–µ—Å—ã ‚ôé', dates: '23.09 - 22.10' },
                { id: 'scorpio', name: '–°–∫–æ—Ä–ø–∏–æ–Ω ‚ôè', dates: '23.10 - 21.11' },
                { id: 'sagittarius', name: '–°—Ç—Ä–µ–ª–µ—Ü ‚ôê', dates: '22.11 - 21.12' },
                { id: 'capricorn', name: '–ö–æ–∑–µ—Ä–æ–≥ ‚ôë', dates: '22.12 - 19.01' },
                { id: 'aquarius', name: '–í–æ–¥–æ–ª–µ–π ‚ôí', dates: '20.01 - 18.02' },
                { id: 'pisces', name: '–†—ã–±—ã ‚ôì', dates: '19.02 - 20.03' }
            ],
            lookingForOptions: [
                { id: 'friendship', name: '–î—Ä—É–∂–±–∞', emoji: 'ü§ù' },
                { id: 'dating', name: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è', emoji: 'üíë' },
                { id: 'serious', name: '–°–µ—Ä—å—ë–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è', emoji: 'üíç' },
                { id: 'networking', name: '–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥', emoji: 'üëî' },
                { id: 'travel', name: '–°–ø—É—Ç–Ω–∏–∫ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π', emoji: '‚úàÔ∏è' }
            ],
            preferenceOptions: [
                { id: 'male', name: '–ú—É–∂—á–∏–Ω', emoji: 'üë®' },
                { id: 'female', name: '–ñ–µ–Ω—â–∏–Ω', emoji: 'üë©' },
                { id: 'both', name: '–í—Å–µ—Ö', emoji: 'üöª' }
            ]
        };

        this.state = {
            currentScreen: 'main', // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
            currentStep: 1,
            totalSteps: 9,
            userData: {
                name: '',
                gender: '',
                age: '',
                zodiacSign: '',
                city: '',
                description: '',
                interests: [],
                lookingFor: [],
                preference: 'both',
                profileColor: '#FF6B6B', // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ü–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                avatar: null,
                photos: [],
                location: { lat: null, lng: null }
            },
            suggestedProfiles: [],
            likedProfiles: [],
            passedProfiles: []
        };

        this.initElements();
        this.formHandler = new FormHandler(this);
        this.profileHandler = new ProfileHandler(this);
        this.uiHandler = new UIHandler(this);
        this.discoveryHandler = new DiscoveryHandler(this);

        this.bindEvents();
        this.checkSavedProfile();
        this.showLoadingScreen();
    }

    showLoadingScreen() {
        this.uiHandler.initLogoAnimation(); 

        setTimeout(() => {
            const loadingScreen = document.getElementById('loadingScreen');
            const appContainer = document.getElementById('appContainer');

            loadingScreen.style.opacity = '0'; 

            loadingScreen.addEventListener('transitionend', function handler() {
                loadingScreen.style.display = 'none';
                appContainer.style.display = 'flex'; // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ flex –¥–ª—è app-container
                loadingScreen.removeEventListener('transitionend', handler); 
                // –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
                this.switchScreen(this.state.currentScreen);
            }.bind(this), { once: true }); // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º this
        }, 1500);
    }

    initElements() {
        this.elements = {
            mainScreen: document.getElementById('mainScreen'),
            registrationForm: document.getElementById('registrationForm'),
            profileView: document.getElementById('profileView'),
            discoveryScreen: document.getElementById('discoveryScreen'),
            startBtn: document.getElementById('startBtn'),
            topNavigation: document.getElementById('topNavigation'), // –ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
            navButtons: document.querySelectorAll('.nav-btn') // –ù–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        };
    }

    bindEvents() {
        this.elements.startBtn.addEventListener('click', () => this.startRegistration());
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.elements.navButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                const screenName = e.currentTarget.dataset.screen;
                if (screenName === 'profile') {
                    this.showProfile();
                } else if (screenName === 'discovery') {
                    this.startDiscovery();
                } else if (screenName === 'main') {
                    this.showMainScreen();
                }
            });
        });

        // –ö–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å" –Ω–∞ —ç–∫—Ä–∞–Ω–µ "–ù–µ—Ç –∞–Ω–∫–µ—Ç"
        const backToProfileFromDiscoveryBtn = document.getElementById('backToProfileFromDiscoveryBtn');
        if (backToProfileFromDiscoveryBtn) {
            backToProfileFromDiscoveryBtn.addEventListener('click', () => this.showProfile());
        }
    }

    checkSavedProfile() {
        const savedProfile = localStorage.getItem('datingProfile');
        if (savedProfile) {
            try {
                this.state.userData = JSON.parse(savedProfile);
                if (!Array.isArray(this.state.userData.interests)) {
                    this.state.userData.interests = [];
                }
                if (!Array.isArray(this.state.userData.lookingFor)) {
                    this.state.userData.lookingFor = [];
                }
                if (!this.state.userData.preference) {
                    this.state.userData.preference = 'both';
                }
                this.state.currentScreen = 'profile'; // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –µ—Å—Ç—å, –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø—Ä–æ—Ñ–∏–ª—è
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:', e);
                localStorage.removeItem('datingProfile');
                this.state.currentScreen = 'main'; // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
            }
        } else {
            this.state.currentScreen = 'main'; // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ–º —Å –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
        }
    }

    startRegistration() {
        this.switchScreen('registration');
        this.formHandler.renderForm();
    }

    showProfile() {
        this.profileHandler.showProfile();
        this.switchScreen('profile');
    }

    startDiscovery() {
        this.discoveryHandler.startDiscovery();
        this.switchScreen('discovery');
    }

    showMainScreen() {
        this.switchScreen('main');
    }

    switchScreen(screenName) {
        // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
        this.elements.mainScreen.classList.remove('active');
        this.elements.registrationForm.classList.remove('active');
        this.elements.profileView.classList.remove('active');
        this.elements.discoveryScreen.classList.remove('active');

        // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.elements.navButtons.forEach(button => button.classList.remove('active'));

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω –∏ –∫–Ω–æ–ø–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if (screenName === 'main') {
            this.elements.mainScreen.classList.add('active');
            document.querySelector('.nav-btn[data-screen="main"]').classList.add('active');
            this.elements.topNavigation.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        } else if (screenName === 'registration') {
            this.elements.registrationForm.classList.add('active');
            this.elements.topNavigation.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤–æ –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        } else if (screenName === 'profile') {
            this.elements.profileView.classList.add('active');
            document.querySelector('.nav-btn[data-screen="profile"]').classList.add('active');
            this.elements.topNavigation.style.display = 'flex';
        } else if (screenName === 'discovery') {
            this.elements.discoveryScreen.classList.add('active');
            document.querySelector('.nav-btn[data-screen="discovery"]').classList.add('active');
            this.elements.topNavigation.style.display = 'flex';
        }
        this.state.currentScreen = screenName; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
    }

    calculateDistance(lat1, lon1, lat2, lon2) {
        if (!lat1 || !lon1 || !lat2 || !lon2) return null;
        
        const R = 6371;
        const dLat = this.deg2rad(lat2-lat1);
        const dLon = this.deg2rad(lon2-lon1);
        const a = 
            Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * 
            Math.sin(dLon/2) * Math.sin(dLon/2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        return Math.round(R * c);
    }

    deg2rad(deg) {
        return deg * (Math.PI/180);
    }
}

document.addEventListener('DOMContentLoaded', () => {
    new DatingApp();
});
